{
    "swagger": "2.0",
    "info": {
        "description": "A Game Integration API for casino games with wallet management. Provides authentication, player information, bet placement (withdraw), bet settlement (deposit), and transaction cancellation endpoints.",
        "title": "Game Integration API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login response",
                        "schema": {
                            "$ref": "#/definitions/http.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/http.LoginErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/http.LoginErrorResponse"
                        }
                    }
                }
            }
        },
        "/bet/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel a bet transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bet"
                ],
                "summary": "Cancel a transaction",
                "parameters": [
                    {
                        "description": "Cancel details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.cancelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bet response",
                        "schema": {
                            "$ref": "#/definitions/http.BetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/http.BetErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.BetErrorResponse"
                        }
                    }
                }
            }
        },
        "/bet/deposit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Settle a bet by depositing funds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bet"
                ],
                "summary": "Settle a bet (deposit)",
                "parameters": [
                    {
                        "description": "Deposit details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.depositRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bet response",
                        "schema": {
                            "$ref": "#/definitions/http.BetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/http.BetErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.BetErrorResponse"
                        }
                    }
                }
            }
        },
        "/bet/withdraw": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Place a bet by withdrawing funds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bet"
                ],
                "summary": "Place a bet (withdraw)",
                "parameters": [
                    {
                        "description": "Withdraw details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.withdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bet response",
                        "schema": {
                            "$ref": "#/definitions/http.BetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/http.BetErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.BetErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Get application metrics in Prometheus format.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get application metrics",
                "responses": {
                    "200": {
                        "description": "Prometheus metrics",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the authenticated player's profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Get player profile",
                "responses": {
                    "200": {
                        "description": "Profile response",
                        "schema": {
                            "$ref": "#/definitions/http.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.ProfileErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.BetErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "insufficient funds"
                }
            }
        },
        "http.BetResponse": {
            "type": "object",
            "properties": {
                "new_balance": {
                    "type": "number",
                    "example": 90
                },
                "old_balance": {
                    "type": "number",
                    "example": 100
                },
                "provider_transaction_id": {
                    "type": "string",
                    "example": "tx123"
                },
                "status": {
                    "type": "string",
                    "example": "COMPLETED"
                },
                "transaction_id": {
                    "type": "integer",
                    "example": 123
                }
            }
        },
        "http.LoginErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid credentials"
                }
            }
        },
        "http.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                },
                "username": {
                    "type": "string",
                    "example": "testuser1"
                }
            }
        },
        "http.ProfileErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "unauthorized"
                }
            }
        },
        "http.ProfileResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 100
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "http.cancelRequest": {
            "type": "object",
            "required": [
                "provider_transaction_id"
            ],
            "properties": {
                "provider_transaction_id": {
                    "type": "string"
                }
            }
        },
        "http.depositRequest": {
            "type": "object",
            "required": [
                "currency",
                "provider_transaction_id",
                "provider_withdrawn_transaction_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "provider_transaction_id": {
                    "type": "string"
                },
                "provider_withdrawn_transaction_id": {
                    "type": "string"
                }
            }
        },
        "http.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "testpass"
                },
                "username": {
                    "type": "string",
                    "example": "testuser1"
                }
            }
        },
        "http.withdrawRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "provider_transaction_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "game_id": {
                    "type": "string"
                },
                "provider_transaction_id": {
                    "type": "string"
                },
                "round_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "IMPORTANT: Enter your JWT token with \"Bearer \" prefix. Example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyOSwiZXhwIjoxNzUxMjg4ODc0fQ.IwLr7sPvhXb_3HxI4d8F_UQinvJxc3ePfuM30ztMcdU",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}